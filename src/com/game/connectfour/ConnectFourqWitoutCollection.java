package com.game.connectfour;import java.util.Scanner;public class ConnectFourqWitoutCollection {	public static String[][] createBoard()	{		String[][] f = new String[7][15];		for (int i = 0; i < f.length; i++) {			for (int j = 0; j < f[i].length; j++) {				if (j % 2 == 0)					f[i][j] = "|";				else					f[i][j] = " ";				if (i == 6)					f[i][j] = "-";			}		}		return f;	}	public static void printBoard(String[][] f) {		for (int i = 0; i < f.length; i++) {			for (int j = 0; j < f[i].length; j++) {				System.out.print(f[i][j]);			}			System.out.println();		}	}	public static void dropRedPattern(String[][] f) {		do {			System.out.println("Player 1 [RED] - choose column (1-7): ");			Scanner scan = new Scanner(System.in);			int input=scan.nextInt();			int c = 2 * input + 1;			for (int i = 5; i >= 0; i--) {				if (f[i][c - 2] == " ") {					f[i][c - 2] = "R";					return;				}			}			System.out.println("Column is full.");		} while (true);	}	public static void dropGreenPattern(String[][] f) {		do {			System.out.println("Player 2 [GREEN] - choose column (1-7): ");			Scanner scan = new Scanner(System.in);			int input=scan.nextInt();			int c = 2 * input+ 1;			for (int i = 5; i >= 0; i--) {				if (f[i][c - 2] == " ") {					f[i][c - 2] = "G";					return;				}			}			System.out.println("Column is full.");		} while (true);	}	public static String checkWinner(String[][] f) {		// Check horizontally		for (int i = 0; i < 6; i++) {			for (int j = 0; j < 7; j += 2) {				if ((f[i][j + 1] != " ") && (f[i][j + 3] != " ") && (f[i][j + 5] != " ") && (f[i][j + 7] != " ")						&& ((f[i][j + 1] == f[i][j + 3]) && (f[i][j + 3] == f[i][j + 5])								&& (f[i][j + 5] == f[i][j + 7])))					return f[i][j + 1];			}		}		// check vertically		for (int i = 1; i < 15; i += 2) {			for (int j = 0; j < 3; j++) {				if ((f[j][i] != " ") && (f[j + 1][i] != " ") && (f[j + 2][i] != " ") && (f[j + 3][i] != " ")						&& ((f[j][i] == f[j + 1][i]) && (f[j + 1][i] == f[j + 2][i]) && (f[j + 2][i] == f[j + 3][i])))					return f[j][i];			}		}		// check diagonally from left to right		for (int i = 0; i < 3; i++) {			for (int j = 1; j < 9; j += 2) {				if ((f[i][j] != " ") && (f[i + 1][j + 2] != " ") && (f[i + 2][j + 4] != " ") && (f[i + 3][j + 6] != " ")						&& ((f[i][j] == f[i + 1][j + 2]) && (f[i + 1][j + 2] == f[i + 2][j + 4])								&& (f[i + 2][j + 4] == f[i + 3][j + 6])))					return f[i][j];			}		}		// check diagonally from right to left		for (int i = 0; i < 3; i++) {			for (int j = 7; j < 15; j += 2) {				if ((f[i][j] != " ") && (f[i + 1][j - 2] != " ") && (f[i + 2][j - 4] != " ") && (f[i + 3][j - 6] != " ")						&& ((f[i][j] == f[i + 1][j - 2]) && (f[i + 1][j - 2] == f[i + 2][j - 4])								&& (f[i + 2][j - 4] == f[i + 3][j - 6])))					return f[i][j];			}		}		return null;	}	public static void main(String[] args) {		String[][] f = createBoard();		boolean loop = true;		int count = 0;		printBoard(f);		try {			while (loop) {				try {					if (count % 2 == 0)						dropRedPattern(f);					else						dropGreenPattern(f);					count++;					printBoard(f);					if (checkWinner(f) != null) {						if (checkWinner(f) == "R")							System.out.println("Player 1 [RED] wins!");						else if (checkWinner(f) == "G")							System.out.println("Player 2 [GREEN] wins!");						loop = false;					}				} catch (ArrayIndexOutOfBoundsException e) {					System.out.println("Invalid Input Please Enter valid number 1-7");				}			}		} catch (Exception e) {			System.out.println("Error Occured " + e.getMessage());		}	}}